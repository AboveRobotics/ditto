---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: concierge
  labels:
    app: concierge
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 30
  selector:
    matchLabels:
      app: concierge
  template:
    metadata:
      labels:
        app: concierge
        actorSystemName: ditto-cluster
    spec:
      restartPolicy: Always
      containers:
      - name: concierge
        image: docker.io/eclipse/ditto-concierge:latest
        imagePullPolicy: IfNotPresent
        args: ["java", "-jar", "starter.jar"]
        # Resource can be managed by setting the following resource config.
        resources:
          requests:
            cpu: "1"
            memory: "512Mi"
          limits:
            # cpu: "" no cpu limit to avoid CFS scheduler limits see https://doc.akka.io/docs/akka/snapshot/additional/deploy.html#in-kubernetes
            memory: "2Gi"
        ports:
        - name: remoting
          containerPort: 2551
          protocol: TCP
        - name: management
          containerPort: 8558
          protocol: TCP
        readinessProbe:
          httpGet:
            port: management
            path: /ready
          initialDelaySeconds: 45
          periodSeconds: 10
        livenessProbe:
          httpGet:
            port: management
            path: /alive
          initialDelaySeconds: 180
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 4
        env:
        - name: INSTANCE_INDEX
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: DISCOVERY_METHOD
          value: "kubernetes-api"
        - name: TZ
          value: "Europe/Berlin"
        - name: OPENJ9_JAVA_OPTIONS
          value: "-Xgcpolicy:gencon -Xgc:concurrentScavenge -XX:+IdleTuningGcOnIdle -XX:+ExitOnOutOfMemoryError -Xtune:virtualized -Xss512k -XX:MaxRAMPercentage=80 -Dakka.coordinated-shutdown.exit-jvm=on -Dakka.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s"
        - name: MONGO_DB_HOSTNAME
          value: "mongodb"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: connectivity
  labels:
    app: connectivity
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 30
  selector:
    matchLabels:
      app: connectivity
  template:
    metadata:
      labels:
        app: connectivity
        actorSystemName: ditto-cluster
    spec:
      restartPolicy: Always
      containers:
      - name: connectivity
        image: docker.io/eclipse/ditto-connectivity:latest
        imagePullPolicy: IfNotPresent
        args: ["java", "-jar", "starter.jar"]
        # Resource can be managed by setting the following resource config.
        #resources:
        #  requests:
        #    cpu: "1"
        #    memory: "1Gi"
        #  limits:
        #    # cpu: "" no cpu limit to avoid CFS scheduler limits see https://doc.akka.io/docs/akka/snapshot/additional/deploy.html#in-kubernetes
        #    memory: "4Gi"
        ports:
        - name: remoting
          containerPort: 2551
          protocol: TCP
        - name: management
          containerPort: 8558
          protocol: TCP
        readinessProbe:
          httpGet:
            port: management
            path: /ready
          initialDelaySeconds: 45
          periodSeconds: 10
        livenessProbe:
          httpGet:
            port: management
            path: /alive
          initialDelaySeconds: 180
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 4
        env:
        - name: INSTANCE_INDEX
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: DISCOVERY_METHOD
          value: "kubernetes-api"
        - name: TZ
          value: "Europe/Berlin"
        - name: OPENJ9_JAVA_OPTIONS
          value: "-Xgcpolicy:gencon -Xgc:concurrentScavenge -XX:+IdleTuningGcOnIdle -XX:+ExitOnOutOfMemoryError -Xtune:virtualized -Xss512k -XX:MaxRAMPercentage=80 -Dakka.coordinated-shutdown.exit-jvm=on -Dakka.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s"
        - name: MONGO_DB_HOSTNAME
          value: "mongodb"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: things
  labels:
    app: things
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 30
  selector:
    matchLabels:
      app: things
  template:
    metadata:
      labels:
        app: things
        actorSystemName: ditto-cluster
    spec:
      restartPolicy: Always
      containers:
      - name: things
        image: docker.io/eclipse/ditto-things:latest
        imagePullPolicy: IfNotPresent
        args: ["java", "-jar", "starter.jar"]
        # Resource can be managed by setting the following resource config.
        #resources:
        #  requests:
        #    cpu: "1"
        #    memory: "1Gi"
        #  limits:
        #    # cpu: "" no cpu limit to avoid CFS scheduler limits see https://doc.akka.io/docs/akka/snapshot/additional/deploy.html#in-kubernetes
        #    memory: "4Gi"
        ports:
        - name: remoting
          containerPort: 2551
          protocol: TCP
        - name: management
          containerPort: 8558
          protocol: TCP
        readinessProbe:
          httpGet:
            port: management
            path: /ready
          initialDelaySeconds: 45
          periodSeconds: 10
        livenessProbe:
          httpGet:
            port: management
            path: /alive
          initialDelaySeconds: 180
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 4
        env:
        - name: INSTANCE_INDEX
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: DISCOVERY_METHOD
          value: "kubernetes-api"
        - name: TZ
          value: "Europe/Berlin"
        - name: OPENJ9_JAVA_OPTIONS
          value: "-Xgcpolicy:gencon -Xgc:concurrentScavenge -XX:+IdleTuningGcOnIdle -XX:+ExitOnOutOfMemoryError -Xtune:virtualized -Xss512k -XX:MaxRAMPercentage=80 -Dakka.coordinated-shutdown.exit-jvm=on -Dakka.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s"
        - name: MONGO_DB_HOSTNAME
          value: "mongodb"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: things-search
  labels:
    app: things-search
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 30
  selector:
    matchLabels:
      app: things-search
  template:
    metadata:
      labels:
        app: things-search
        actorSystemName: ditto-cluster
    spec:
      containers:
      - name: things-search
        image: docker.io/eclipse/ditto-things-search:latest
        imagePullPolicy: IfNotPresent
        args: ["java", "-jar", "starter.jar"]
        # Resource can be managed by setting the following resource config.
        #resources:
        #  requests:
        #    cpu: "0.75"
        #    memory: "512Mi"
        #  limits:
        #    # cpu: "" no cpu limit to avoid CFS scheduler limits see https://doc.akka.io/docs/akka/snapshot/additional/deploy.html#in-kubernetes
        #    memory: "2Gi"
        ports:
        - name: remoting
          containerPort: 2551
          protocol: TCP
        - name: management
          containerPort: 8558
          protocol: TCP
        readinessProbe:
          httpGet:
            port: management
            path: /ready
          initialDelaySeconds: 45
          periodSeconds: 10
        livenessProbe:
          httpGet:
            port: management
            path: /alive
          initialDelaySeconds: 180
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 4
        env:
        - name: INSTANCE_INDEX
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: DISCOVERY_METHOD
          value: "kubernetes-api"
        - name: TZ
          value: "Europe/Berlin"
        - name: OPENJ9_JAVA_OPTIONS
          value: "-Xgcpolicy:gencon -Xgc:concurrentScavenge -XX:+IdleTuningGcOnIdle -XX:+ExitOnOutOfMemoryError -Xtune:virtualized -Xss512k -XX:MaxRAMPercentage=80 -Dakka.coordinated-shutdown.exit-jvm=on -Dakka.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s"
        - name: MONGO_DB_HOSTNAME
          value: "mongodb"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: policies
  labels:
    app: policies
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 30
  selector:
    matchLabels:
      app: policies
  template:
    metadata:
      labels:
        app: policies
        actorSystemName: ditto-cluster
    spec:
      containers:
      - name: policies
        image: docker.io/eclipse/ditto-policies:latest
        imagePullPolicy: IfNotPresent
        args: ["java", "-jar", "starter.jar"]
        # Resource can be managed by setting the following resource config.
        #resources:
        #  requests:
        #    cpu: "0.75"
        #    memory: "1Gi"
        #  limits:
        #    # cpu: "" no cpu limit to avoid CFS scheduler limits see https://doc.akka.io/docs/akka/snapshot/additional/deploy.html#in-kubernetes
        #    memory: "2Gi"
        ports:
        - name: remoting
          containerPort: 2551
          protocol: TCP
        - name: management
          containerPort: 8558
          protocol: TCP
        readinessProbe:
          httpGet:
            port: management
            path: /ready
          initialDelaySeconds: 45
          periodSeconds: 10
        livenessProbe:
          httpGet:
            port: management
            path: /alive
          initialDelaySeconds: 180
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 4
        env:
        - name: INSTANCE_INDEX
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: DISCOVERY_METHOD
          value: "kubernetes-api"
        - name: TZ
          value: "Europe/Berlin"
        - name: OPENJ9_JAVA_OPTIONS
          value: "-Xgcpolicy:gencon -Xgc:concurrentScavenge -XX:+IdleTuningGcOnIdle -XX:+ExitOnOutOfMemoryError -Xtune:virtualized -Xss512k -XX:MaxRAMPercentage=80 -Dakka.coordinated-shutdown.exit-jvm=on -Dakka.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s"
        - name: MONGO_DB_HOSTNAME
          value: "mongodb"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  labels:
    app: gateway
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 30
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
        actorSystemName: ditto-cluster
    spec:
      containers:
      - name: gateway
        image: docker.io/eclipse/ditto-gateway:latest
        imagePullPolicy: IfNotPresent
        args: ["java", "-jar", "starter.jar"]
        # Resource can be managed by setting the following resource config.
        #resources:
        #  requests:
        #    cpu: "1"
        #    memory: "512Mi"
        #  limits:
        #    # cpu: "{{ item.cpus }}" no cpu limit to avoid CFS scheduler limits see https://doc.akka.io/docs/akka/snapshot/additional/deploy.html#in-kubernetes
        #    memory: "2Gi"
        ports:
        - name: remoting
          containerPort: 2551
          protocol: TCP
        - name: management
          containerPort: 8558
          protocol: TCP
        readinessProbe:
          httpGet:
            port: management
            path: /ready
          initialDelaySeconds: 45
          periodSeconds: 10
        livenessProbe:
          httpGet:
            port: management
            path: /alive
          initialDelaySeconds: 180
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 4
        env:
        - name: ENABLE_PRE_AUTHENTICATION
          value: "true"
        - name: INSTANCE_INDEX
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: DISCOVERY_METHOD
          value: "kubernetes-api"
        - name: TZ
          value: "Europe/Berlin"
        - name: OPENJ9_JAVA_OPTIONS
          value: "-Xgcpolicy:gencon -Xgc:concurrentScavenge -XX:+IdleTuningGcOnIdle -XX:+ExitOnOutOfMemoryError -Xtune:virtualized -Xss512k -XX:MaxRAMPercentage=80 -Dakka.coordinated-shutdown.exit-jvm=on -Dakka.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s"
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
spec:
  clusterIP: None
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: gateway
